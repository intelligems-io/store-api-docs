openapi: 3.0.0
info:
  title: Track
  version: '1.0'
  description: |-
    The track endpoint is how you will track conversion events. Conversion must be tracked by IntelliGems in order to 
    Other types of events can also be tracked.
servers:
  - url: 'https://dev.intelligems.io'
    description: Dev
paths:
  /track:
    post:
      summary: User Event
      tags:
        - Track
      responses: {}
      operationId: post-track
      security:
        - Authorization: []
      description: |-
        For tracking user events of any kind. Primarily used for conversion events triggered when users purchase or consume items in your app.

        You may send any additional fields in the body and they will be tracked by IntelliGems.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
            examples:
              example-1:
                value:
                  id: abc-234-xyz
                  userId: some-user
                  eventType: Conversion
                  eventTs: '2020-11-16 10:30:15.000'
                  purchaseItem: gold-coins
                  purchaseAmount: 100
                  costAmount: 2.5
                  costCurrency: rubies
                  appVersion: 1.2.3
                  appId: app-id
      parameters: []
  '/track/{organization_id}':
    parameters:
      - schema:
          type: string
        name: organization_id
        in: path
        required: true
    post:
      summary: Track User Event (External)
      tags:
        - Track
      responses: {}
      operationId: post-track-organization_id
      description: The purpose of this endpoint is for integrating a 3rd Party event site with an HTTP event integration.
components:
  schemas:
    Event:
      description: |-
        An event must have a userId and an eventType.
         - `eventType` can be whatever you want, but there must be a `conversion` event for tracking purposes.
         - `userId` must correspond with the userId in the Store api.
         -
      type: object
      x-examples:
        Conversion Event:
          id: abc-234-xyz
          userId: some-user
          eventType: Conversion
          eventTs: '2020-11-16 10:30:15.000'
          purchaseItem: gold-coins
          purchaseAmount: 100
          costAmount: 2.5
          costCurrency: rubies
          appVersion: 1.2.3
          appId: app-id
      properties:
        id:
          type: string
          minLength: 1
        userId:
          type: string
          minLength: 1
        eventType:
          type: string
          minLength: 1
        eventTs:
          type: string
          minLength: 1
        purchaseItem:
          type: string
          minLength: 1
        purchaseAmount:
          type: number
        costAmount:
          type: number
        costCurrency:
          type: string
          minLength: 1
        appVersion:
          type: string
          minLength: 1
        appId:
          type: string
          minLength: 1
      required:
        - userId
        - eventType
        - eventTs
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
